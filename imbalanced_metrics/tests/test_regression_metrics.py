import unittest
from imbalanced_metrics import regression_metrics as rm
import get_y

class TestRM(unittest.TestCase):

    def setUp(self):
        self.y,self.y_pred=get_y.reg()

    def test_calculate_phi(self):
        phi=[0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.15534078875517326,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.007957625280605327,  0.011330231680990859,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.029593126187968326,  0.64613492123291,  0.026108174557102837,  0.0,  0.013228372685949945,  0.00169308229845217,  0.14106566348160093,  0.11156396062328476,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.043768480141883545,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0020752953475655523,  0.016335695924050594,  0.002495591305056071,  0.02477081717642265,  0.2749258109231241,  0.013228372685949945,  0.37733761497611046,  0.0,  0.0674638702920241,  0.3963047732195929,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.08952922367617898,  0.0,  0.0,  0.002719955297702535,  0.05552952499504383,  0.04462880657833651,  0.046371904418944516,  0.07816628252748165,  0.0674638702920241,  0.15534078875517326,  0.0674638702920241,  0.039580114025972855,  0.08263365323635274,  0.10152666304202786,  0.11672447670759424,  0.18537804281635997,  0.10276030219875669,  0.04549662334758886,  0.21722443025568142,  0.04462880657833651,  0.10152666304202786,  0.08952922367617898,  0.10152666304202786,  0.07927328234774103,  0.06850364583963553,  0.0,  0.12065556410026719,  0.07816628252748165,  0.7586739469914022,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0015163219412771252,  3.135207536672868e-05,  0.0,  0.0,  0.0,  0.0007770230570618971,  0.0,  0.008747296815588364,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.005161026123260982,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.008347974006858631,  0.0,  0.0,  0.005161026123260982,  0.012261822571047132,  0.02477081717642265,  0.002495591305056071,  0.04814475534518142,  0.0,  0.0,  0.008747296815588364,  0.003982894172103378,  0.0,  0.001349160403284629,  0.0,  0.06955026095264417,  0.08836394763505198,  0.18537804281635997,  0.010433808261349835,  0.06337368436947198,  0.02477081717642265,  0.12732091364082712,  0.11028845759957195,  0.23711401658419717,  0.10152666304202786,  0.10524573041506187,  0.6830247560393334,  0.27668247184100647,  0.30338874583869,  0.2506717055044314,  0.3963047732195929,  0.32519549293410666,  0.27668247184100647,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.11542562414949029,  0.0,  0.043768480141883545,  0.0,  0.0007770230570618971,  0.013228372685949945,  0.0,  0.0,  0.41349558483127624,  0.08952922367617898,  1.2562522393431695e-06,  0.2679305993171213,  0.017440000482652523,  0.15534078875517326,  0.2997908828097047,  0.11028845759957195,  0.11933947271367878,  0.2696746353474009,  0.12597661148735304,  0.41541184645454976,  0.17616743241992378,  0.46943442598196994,  0.18228947035634155,  0.4927186753873567,  0.314246318376631,  0.3811186039520767,  0.12732091364082712,  0.4269324208218589,  0.5121348631383618,  0.9351054746519489,  0.9700473457011002,  0.5121348631383618,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.008347974006858631,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.002495591305056071,  0.0,  0.0,  0.004553439307415378,  0.0,  0.0,  0.0002112068315392663,  0.018578223038257465,  0.10152666304202786,  0.007957625280605327,  0.0674638702920241,  0.052705685798855456,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.026108174557102837,  0.0,  0.003711577311387701,  0.002495591305056071,  0.0,  0.0,  0.013228372685949945,  0.008747296815588364,  0.008747296815588364,  0.019159988488195844,  0.0,  0.07816628252748165,  0.057448017665894587,  0.05841796587124927,  0.023466128319333236,  0.039580114025972855,  0.0,  0.0,  0.23711401658419717,  0.2506717055044314,  0.0,  0.02477081717642265,  0.04814475534518142,  0.013724692375978589,  0.009998849429675263,  0.17012025876545575,  0.0674638702920241,  0.14106566348160093,  0.028880061906960717,  0.201088110211798,  0.039580114025972855,  0.16266910758673123,  0.07816628252748165,  0.15534078875517326,  0.19004475768048737,  0.1776909884543357,  0.0,  0.21722443025568142,  0.057448017665894587,  0.2506717055044314,  0.2837397666571798,  0.039580114025972855,  0.15534078875517326,  0.15534078875517326,  0.2837397666571798,  0.2802050410815565,  0.6720535595129671,  0.15534078875517326,  0.18537804281635997,  0.16712526665787467,  0.45781162907112216,  0.37733761497611046,  0.6830247560393334,  0.7737283347753594,  0.33254305604236023,  0.45394161511453396,  0.42885610770119165,  0.0,  0.0,  0.0,  0.0,  0.008747296815588364,  0.0020752953475655523,  0.005161026123260982,  0.201088110211798,  0.038765276230934155,  0.0,  0.3399271662479217,  0.15534078875517326,  0.4966019649989499,  0.17921919747567341,  0.41924776019926224,  0.21722443025568142,  0.07706588799635464,  0.4230880210702216,  0.233760972251922,  0.12330480348705586,  0.19791116353855995,  0.5004854368254157,  0.32153593715539214,  0.5470255101160608,  0.5218384829879743,  0.22709999478369255,  0.7720707141484188,  0.27668247184100647,  0.8890745270691957,  0.36979575875225396,  0.6830247560393334,  0.8184798215839824,  0.9540666675275778,  0.0,  0.0,  0.0,  0.0,  3.135207536672868e-05,  0.002953761925355019,  0.02477081717642265,  0.005161026123260982,  0.14106566348160093,  0.05085936323290941,  0.03795811098356746,  0.12732091364082712,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.08952922367617898,  0.0007770230570618971,  0.0,  0.04814475534518142,  0.00028094848942142054,  0.027477992215805096,  0.201088110211798,  0.15534078875517326,  0.0674638702920241,  0.057448017665894587,  0.10152666304202786,  0.21886050397393486,  0.08605253462209687,  0.05085936323290941,  0.10649746741324606,  0.08952922367617898,  0.146713526258075,  0.6646920960130024,  0.16712526665787467,  0.2679305993171213,  0.24386417521722498,  0.5295962638358829,  0.34363240589827115,  0.3735632638276466,  0.3963047732195929,  0.37733761497611046,  0.43463280398489285,  0.0,  1.0,  0.14529369603990083,  0.4211673602593091,  0.6830247560393334,  0.5508924003891185,  0.2627179231409127,  0.7603615029188444,  0.21722443025568142,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.21722443025568142,  0.08952922367617898,  0.2679305993171213,  0.018578223038257465,  0.008747296815588364,  0.02477081717642265,  0.02477081717642265,  0.10152666304202786,  0.18228947035634155,  0.14106566348160093,  0.039580114025972855,  0.6084511501957948,  0.2679305993171213,  0.4927186753873567,  0.4733122491473847,  0.7189124090463583,  0.40393227043357954,  0.4384883709051521,  0.45394161511453396,  0.6160414235143754,  0.7569827662895301,  0.0,  0.0,  0.0,  0.0,  0.233760972251922,  0.10029910856050966,  0.0,  0.0,  0.0,  3.135207536672868e-05,  0.0,  0.039580114025972855,  0.0,  0.0,  0.0,  0.0,  0.07816628252748165,  0.005161026123260982,  0.201088110211798,  0.753589634685279,  0.18537804281635997,  0.28551162299390365,  0.18537804281635997,  0.08720504260679257,  0.37733761497611046,  0.07816628252748165,  0.15534078875517326,  0.4733122491473847,  1.0,  0.7364153406348759,  0.0,  0.0,  0.0,  0.08952922367617898,  0.057448017665894587,  0.011330231680990859,  0.11413256992893998,  0.057448017665894587,  0.3399271662479217,  0.10152666304202786,  0.10152666304202786,  0.3399271662479217,  0.2489645354474869,  0.9540666675275778,  0.7868481873873889,  0.9995016206311438,  0.0,  0.0,  0.008747296815588364,  0.02477081717642265,  0.18537804281635997,  0.23879608654243858,  0.0,  0.04814475534518142,  0.002495591305056071,  0.02477081717642265,  0.05363974418197842,  0.0,  0.233760972251922,  0.43463280398489285,  0.15534078875517326,  0.3585364024201906,  0.3963047732195929,  0.3963047732195929,  0.3585364024201906,  0.5198982405859295,  0.7900879981916802,  0.7586739469914022,  0.15534078875517326,  0.0,  0.02477081717642265,  0.30338874583869,  0.10152666304202786,  0.11413256992893998,  0.21722443025568142,  0.3492061603675943,  0.984470148536643,  0.0,  0.0007770230570618971,  0.039580114025972855,  0.0,  0.0007770230570618971,  0.0,  0.002495591305056071,  0.0674638702920241,  0.233760972251922,  0.031780124404357235,  0.27142186664562523,  0.3197098068173242,  0.4927186753873567,  0.9768549150343506,  1.0,  0.0,  0.0,  0.039580114025972855,  0.17012025876545575,  0.04814475534518142,  0.031780124404357235,  0.233760972251922,  0.3399271662479217,  0.64613492123291,  0.008747296815588364,  0.0,  0.0,  0.15534078875517326,  0.2506717055044314,  0.057448017665894587,  0.3399271662479217,  1.0,  0.0,  0.15534078875517326,  0.0,  0.3399271662479217,  0.43463280398489285,  0.0,  0.21722443025568142,  0.4733122491473847,  0.2506717055044314,  0.018578223038257465,  0.201088110211798,  0.5121348631383618,  0.9624425863001465,  0.028880061906960717,  0.0674638702920241,  0.057448017665894587,  0.7868481873873889,  0.6646920960130024,  0.5121348631383618,  0.14106566348160093,  0.10152666304202786,  0.2679305993171213,  0.9449456200794824,  0.3585364024201906,  0.43463280398489285,  0.008747296815588364,  0.32153593715539214,  0.5508924003891185,  1.0,  0.8482762917063528,  0.08952922367617898,  0.11413256992893998,  0.17012025876545575,  1.0,  0.30338874583869,  0.9955926777685555,  0.039580114025972855,  0.008747296815588364,  0.0674638702920241,  0.21722443025568142,  0.9449456200794824,  0.43463280398489285,  1.0,  0.0,  0.10152666304202786,  0.013228372685949945,  0.6830247560393334,  0.5701816884966933,  0.64613492123291,  0.005161026123260982,  0.9700473457011002,  3.135207536672868e-05,  0.9995016206311438,  0.6084511501957948,  0.9133720126429195,  0.8336204675024895,  1.0]
        #self.assertEqual(rm.calculate_phi(self.y), phi)

    def test_phi_weighted_r2(self):
        self.assertEqual(rm.phi_weighted_r2(self.y,self.y_pred), 0.10265482067638654)

    def test_phi_weighted_mse(self):
        self.assertEqual(rm.phi_weighted_mse(self.y,self.y_pred), 1.5091869655801122)

    def test_phi_weighted_mae(self):
        self.assertEqual(rm.phi_weighted_mae(self.y,self.y_pred), 0.8809891820598452)

    def test_phi_weighted_root_mse(self):
        self.assertEqual(rm.phi_weighted_root_mse(self.y,self.y_pred), 1.2284897091877132)

    def test_ser_t(self):
        self.assertEqual(rm.phi_weighted_root_mse(self.y,self.y_pred), 1.2284897091877132)

    def test_sera(self):
        self.assertEqual(rm.sera(self.y,self.y_pred), 128.2178637371627)


if __name__ == '__main__':
    unittest.main()